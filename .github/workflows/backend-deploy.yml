name: Backend Deploy to Production

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'settings.gradle'
      - '.github/workflows/backend-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'settings.gradle'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
        
    - name: Run tests
      run: ./gradlew test -Dspring.profiles.active=test
      
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: Build and Deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
        
    - name: Build application
      run: ./gradlew clean build -x test -Dspring.profiles.active=prod
      
    - name: Build Docker image
      run: |
        docker build -t matchalot-backend:latest .
        docker tag matchalot-backend:latest matchalot-backend:${{ github.sha }}
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # 기존 컨테이너 중지 및 제거
          sudo docker stop matchalot-backend || true
          sudo docker rm matchalot-backend || true
          
          # 기존 이미지 제거 (선택적)
          sudo docker rmi matchalot-backend:latest || true
          
          # 새 코드 pull
          cd /home/ubuntu/matchalot
          git pull origin main
          
          # Docker 이미지 빌드
          sudo docker build -t matchalot-backend:latest .
          
          # .env 파일이 있는지 확인
          if [ -f .env ]; then
            echo ".env 파일 발견됨"
            # .env 파일을 사용하여 컨테이너 실행
            sudo docker run -d \
              --name matchalot-backend \
              --restart unless-stopped \
              -p 8080:8080 \
              --env-file .env \
              matchalot-backend:latest
          else
            echo ".env 파일이 없습니다. 기본 환경변수로 실행합니다."
            # 기본 환경변수로 실행
            sudo docker run -d \
              --name matchalot-backend \
              --restart unless-stopped \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              matchalot-backend:latest
          fi
          
          sleep 30
          curl -f http://localhost:8080/actuator/health || exit 1
          
          echo "📋 컨테이너 로그 확인:"
          sudo docker logs --tail 10 matchalot-backend
          
          # 오래된 이미지 정리
          sudo docker image prune -f
          
    - name: Notify deployment success
      if: success()
      run: |
        echo "Deployment successful!"
        echo "Backend is now running on production server"
        
    - name: Notify deployment failure  
      if: failure()
      run: |
        echo "Deployment failed!"
        echo "Please check the logs and fix the issues"
