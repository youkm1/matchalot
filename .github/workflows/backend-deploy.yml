name: Deploy 
on:
  push:
    branches: [ main ]
    paths:  
      - 'src/**'
      - 'build.gradle'
      - 'Dockerfile'
      - 'settings.gradle'  

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4 
      
    - name: Deploy to Azure VM
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        timeout: 300s
        script: |
          echo "=== 코드 업데이트 시작 ==="
          cd /home/youkm0806/matchalot/backend
          git fetch origin main
          git reset --hard origin/main
          git clean -fd 
          
          echo "=== Docker 컨테이너 재배포 시작 ==="
          cd ../devops
          
          # 기존 백엔드 컨테이너 완전 정리
          echo "기존 컨테이너 중지 및 삭제 중..."
          docker-compose stop backend 2>/dev/null || true
          docker-compose rm -f backend 2>/dev/null || true
          
          # 기존 이미지도 삭제하여 완전 새로 빌드
          echo "기존 이미지 삭제 중..."
          docker rmi devops_backend 2>/dev/null || true
          docker rmi devops-backend 2>/dev/null || true
          docker rmi $(docker images | grep matchalot | awk '{print $3}') 2>/dev/null || true
          
          echo "새로운 컨테이너 빌드 및 시작 중..."
          # Docker 컨테이너 내부에서 Gradle 빌드가 실행됨 (Java 호스트 설치 불필요)
          docker-compose up --build -d backend
          
          echo "=== 컨테이너 시작 대기 (60초) ==="
          sleep 60
          
          echo "=== 컨테이너 상태 확인 ==="
          if docker-compose ps backend | grep -q "Up"; then
            echo "백엔드 컨테이너가 정상적으로 실행 중"
          else
            echo "백엔드 컨테이너 실행 실패!"
            echo "컨테이너 로그:"
            docker-compose logs backend --tail 100
            echo "컨테이너 상태:"
            docker-compose ps -a
            exit 1
          fi
          
          echo "=== API 헬스체크 시작 ==="
          # 10회 재시도, 각 15초 간격
          for attempt in {1..10}; do
            echo "헬스체크 시도 $attempt/10..."
            
            if curl -f -s --max-time 10 http://localhost:8080/actuator/health > /dev/null 2>&1; then
              echo "배포 성공! API가 정상 응답 "
              echo "최종 상태:"
              docker-compose ps backend
              echo "메모리 사용량:"
              docker stats --no-stream backend 2>/dev/null || true
              exit 0
            else
              echo "API 응답 없음, 15초 후 재시도..."
              if [ $attempt -eq 10 ]; then
                echo "배포 실패 - API 헬스체크 최종 실패"
                echo "최종 로그 (최근 50줄):"
                docker-compose logs backend --tail 50
                echo "컨테이너 상태:"
                docker-compose ps backend
                echo "포트 확인:"
                netstat -tlnp | grep 8080 || true
                exit 1
              fi
              sleep 15
            fi
          done
